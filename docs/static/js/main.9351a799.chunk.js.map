{"version":3,"sources":["Components/AddCategory.js","helpers/getApi.js","Components/GifItems.js","Components/GifGrid.js","hooks/useFetchGifs.js","Pages/GifExpertApp.js","index.js"],"names":["AddCategory","setVal","useState","text","setText","onSubmit","e","preventDefault","val","console","log","type","value","onChange","event","target","getApi","resp","a","url","encodeURI","fetch","response","json","data","info","map","id","title","images","original","GifItems","className","src","alt","GifGrid","loading","gifs","setGifs","useEffect","then","useFetchGifs","imagenes","res","GifExpertApp","index","ReactDOM","render","document","getElementById"],"mappings":"2MAGe,SAASA,EAAT,GAAgC,IAAVC,EAAS,EAATA,OAAS,EAClBC,mBAAS,IADS,mBACnCC,EADmC,KAC7BC,EAD6B,KAe1C,OACI,uBAAMC,SARW,SAACC,GAClBA,EAAEC,iBACFN,GAAO,SAAAO,GAAG,OAAKL,GAAL,mBAAcK,OACxBC,QAAQC,IAAI,YACZN,EAAQ,KAIR,UACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAMU,SAdnB,SAACC,GAAW,IACtBF,EAASE,EAAMC,OAAfH,MACPR,EAAQQ,MAcJ,wBAAQD,KAAK,SAAb,wB,mCCtBCK,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACZC,EADY,iDACoCC,UAAUH,GAD9C,+DAEKI,MAAMF,GAFX,cAEZG,EAFY,gBAGGA,EAASC,OAHZ,uBAGXC,EAHW,EAGXA,KACDC,EAAOD,EAAKE,KAAI,kBAClB,CACIC,GAFc,EAAEA,GAGhBC,MAHc,EAAMA,MAIpBC,OAJc,EAAaA,OAIZC,SAASX,QARd,kBAWXM,GAXW,4CAAH,sDCWJM,MATf,YAAoC,IAAjBH,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,OACtB,OACI,sBAAKG,UAAU,2CAAf,UACI,6BAAKJ,IACL,qBAAKK,IAAKJ,EAAQK,IAAKN,QCepBO,MAjBf,YAA0B,IAAD,ECDG,SAAClB,GAAU,IAAD,EACVf,mBAAS,CAC7BsB,KAAM,GACNY,SAAS,IAHqB,mBAC3BC,EAD2B,KACrBC,EADqB,KAgBlC,OAVAC,qBAAU,WACNvB,EAAOC,GACFuB,MAAK,SAAAX,GACFS,EAAQ,CACJd,KAAMK,EACNO,SAAS,SAGtB,CAACnB,IAEGoB,EDd0BI,CADZ,EAAPxB,MACFyB,EADS,EACdlB,KAAeY,EADD,EACCA,QAEtB,OACI,sBAAKJ,UAAU,YAAf,UAEQI,GAAW,mBAAGJ,UAAU,iBAAb,yBAGXU,EAAShB,KAAI,SAAAiB,GAAG,OACZ,cAAC,EAAD,eAA2BA,GAAZA,EAAIhB,WETxB,SAASiB,IAAgB,IAAD,EACb1C,mBAAS,IADI,mBAC5BM,EAD4B,KACvBP,EADuB,KAEnC,OACI,qCACI,8CACA,uBACA,cAACD,EAAD,CAAaC,OAAQA,IACrB,6BACKO,EAAIkB,KAAI,SAACT,EAAM4B,GAAP,OACL,cAAC,EAAD,CAAS5B,KAAMA,GAAW4B,WCT9CC,IAASC,OACL,cAACH,EAAD,IACFI,SAASC,eAAe,W","file":"static/js/main.9351a799.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function AddCategory({setVal}) {\r\n    const [text, setText] = useState('')\r\n\r\n    const handleChange = (event) => {\r\n        const {value} = event.target\r\n        setText(value)\r\n    }\r\n    \r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        setVal(val => [text, ...val])\r\n        console.log('Agregado')\r\n        setText('')\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={text} onChange={handleChange}/>\r\n            {/* <input type=\"number\" name='cant' value={text.cant} onChange={handleChange}/> */}\r\n            <button type='submit'>Agregar</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setVal: PropTypes.func.isRequired\r\n}","export const getApi = async (resp) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(resp)}&limit=10&api_key=wBdiWxIrARcjtEM4lXTnJSKTzXhyvud8`\r\n    const response = await fetch(url)\r\n    const {data} = await response.json()\r\n    const info = data.map(({id, title, images}) => (\r\n        {\r\n            id,\r\n            title,\r\n            images: images.original.url\r\n        }\r\n        ))\r\n    return info\r\n}","import React from 'react'\r\n\r\nfunction GifItems({title, images}) {\r\n    return (\r\n        <div className='card animate__animated animate__bounceIn'>\r\n            <h1>{title}</h1>\r\n            <img src={images} alt={title}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifItems\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GifItems from './GifItems'\r\n\r\nfunction GifGrid({resp}) {\r\n    const {data:imagenes, loading} = useFetchGifs(resp)\r\n        \r\n    return (\r\n        <div className='conteiner'>\r\n            {\r\n                loading && <p className='animate__flash'>Cargando...</p>\r\n            }\r\n            {\r\n                imagenes.map(res => (\r\n                    <GifItems key={res.id} {...res}/>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\";\r\nimport { getApi } from \"../helpers/getApi\";\r\n\r\nexport const useFetchGifs = (resp) => {\r\n    const [gifs, setGifs] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect(() => {\r\n        getApi(resp)\r\n            .then(images => {\r\n                setGifs({\r\n                    data: images,\r\n                    loading: false\r\n                })\r\n            })\r\n    }, [resp])\r\n\r\n    return gifs\r\n}","import React, { useState } from 'react'\r\nimport AddCategory from '../Components/AddCategory'\r\nimport GifGrid from '../Components/GifGrid'\r\n\r\n\r\nexport default function GifExpertApp (){\r\n    const [val, setVal] = useState([])\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <hr/>\r\n            <AddCategory setVal={setVal}/>\r\n            <ol>\r\n                {val.map((resp, index) => (\r\n                    <GifGrid resp={resp} key={index}/>\r\n                ))}\r\n            </ol>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './Pages/GifExpertApp'\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}